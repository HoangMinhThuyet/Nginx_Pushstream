user  nginx;
worker_processes  auto;
#error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;
	open_file_cache max=200000 inactive=20s;
	open_file_cache_valid 30s;
	open_file_cache_min_uses 2;
	open_file_cache_errors on;
	sendfile        on;
	tcp_nopush     off;
	tcp_nodelay on;
	keepalive_requests 100000;
	keepalive_timeout  300 300;
	reset_timedout_connection on;
	client_body_timeout   15s;
	lingering_time 5s;
	lingering_timeout 1s;
	client_header_timeout 5s;
	send_timeout 9s;

	client_body_buffer_size  2M;
	client_header_buffer_size 10k;
	client_max_body_size 10M;
	large_client_header_buffers 2 2k;
	
	push_stream_max_subscribers_per_channel 100;
    push_stream_shared_memory_size                1024m;
    push_stream_max_channel_id_length             256;
    push_stream_max_messages_stored_per_channel   512;
    push_stream_message_ttl                       5m;
    push_stream_ping_message_interval             30s;
    push_stream_subscriber_connection_ttl         15m;
    push_stream_timeout_with_body                 off;
    push_stream_wildcard_channel_prefix         "broad_";
    push_stream_wildcard_channel_max_qtd        3;
    push_stream_message_template                "{\"id\":~id~,\"channel\":\"~channel~\",\"text\":\"~text~\", \"tag\":\"~tag~\", \"time\":\"~time~\", \"eventid\":\"~event-id~\"}";
    push_stream_authorized_channels_only        off;
    push_stream_allowed_origins                 "*";
	gzip on;
		gzip_min_length 10240;
		gzip_comp_level 1;
		gzip_vary on;
		gzip_disable msie6;
		gzip_proxied expired no-cache no-store private auth;
		gzip_types
			text/css
			text/javascript
			text/xml
			text/plain
			text/x-component
			application/javascript
			application/x-javascript
			application/json
			application/xml
			application/rss+xml
			application/atom+xml
			application/vnd.ms-fontobject
			font/truetype
			font/opentype
			image/svg+xml;

    server{
		listen 80;
		server_name _;
		#access_log /var/log/nginx/ngxps-ev-access.log main;
		#error_log  /var/log/nginx/ngxps-ev-error.log;

		location / {
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			}
			if ($request_method = 'POST') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
				add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
			}
			if ($request_method = 'GET') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
				add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
			}
		}

		location /pub {
			push_stream_publisher admin;
			push_stream_channels_path               $arg_id;
			push_stream_store_messages              on;
		}

		location /ws {
			push_stream_subscriber websocket;
			push_stream_channels_path                   $arg_channels;
			push_stream_websocket_allow_publish         on;
			push_stream_last_received_message_time      "$arg_time";
			push_stream_last_received_message_tag       "$arg_tag";
			push_stream_ping_message_interval           10s;
		}
	}

}
